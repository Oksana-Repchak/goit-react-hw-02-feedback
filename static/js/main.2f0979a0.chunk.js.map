{"version":3,"sources":["components/Section/Section.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","getNameFeedback","namesResponse","Object","keys","className","s","list","map","item","onClick","button","Statistics","good","neutral","bad","total","positivePercentage","statisticList","Notification","message","notification","App","state","clickActiveItem","setState","PrevState","name","slice","toUpperCase","toLowerCase","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,QACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,gBAEMC,EAAgBC,OAAOC,KAAKL,GAClC,OACE,oBAAIM,UAAWC,IAAEC,KAAjB,SACGL,EAAcM,KAAI,SAAAC,GAAI,OACrB,6BACE,wBAAQC,QAAS,kBAAMV,EAAgBS,IAAOJ,UAAWC,IAAEK,OAA3D,SACGV,EAAgBQ,MAFZA,Q,oBCTF,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIZ,UAAWC,IAAEY,cAAjB,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,Y,oBCtBO,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGf,UAAWC,IAAEe,aAAhB,SAA+BD,I,ICEnBE,E,4MACnBC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,gBAAkB,SAAAf,GAChB,EAAKgB,UAAS,SAAAC,GAAS,sBACpBjB,EAAOiB,EAAUjB,GAAQ,O,EAI9BR,gBAAkB,SAAA0B,GAChB,MAAM,GAAN,OAAUA,EAAKC,MAAM,EAAG,GAAGC,eAA3B,OAA2CF,EAAKC,MAAM,GAAGE,gB,EAG3DC,mBAAqB,WACnB,OAAO5B,OAAO6B,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAKzB,GAAN,OAAeyB,EAAMzB,IAAM,I,EAGrE0B,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKd,MAAMV,KAAc,EAAKkB,uB,uDAIjD,OACE,gCACE,cAACpC,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASuC,KAAKf,MACdvB,gBAAiBsC,KAAKd,gBACtBvB,gBAAiBqC,KAAKrC,oBAG1B,cAACN,EAAD,CAASC,MAAM,aAAf,SACiC,IAA9B0C,KAAKP,qBACJ,cAACZ,EAAD,CAAcC,QAAQ,sBAEtB,cAACR,EAAD,CACEC,KAAMyB,KAAKf,MAAMV,KACjBC,QAASwB,KAAKf,MAAMT,QACpBC,IAAKuB,KAAKf,MAAMR,IAChBC,MAAOsB,KAAKP,qBACZd,mBAAoBqB,KAAKH,6C,GA5CNI,a,MCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,kBCAzDD,EAAOC,QAAU,CAAC,cAAgB,oC,kBCAlCD,EAAOC,QAAU,CAAC,aAAe,sC","file":"static/js/main.2f0979a0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nexport default function FeedbackOptions({\n  options,\n  onLeaveFeedback,\n  getNameFeedback,\n}) {\n  const namesResponse = Object.keys(options);\n  return (\n    <ul className={s.list}>\n      {namesResponse.map(item => (\n        <li key={item}>\n          <button onClick={() => onLeaveFeedback(item)} className={s.button}>\n            {getNameFeedback(item)}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n  getNameFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={s.statisticList}>\n      <li>\n        <p>Good: {good}</p>\n      </li>\n      <li>\n        <p>Neutral: {neutral}</p>\n      </li>\n      <li>\n        <p>Bad: {bad}</p>\n      </li>\n      <li>\n        <p>Total: {total}</p>\n      </li>\n      <li>\n        <p>Positive feedback: {positivePercentage}%</p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.notification}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Component } from 'react';\nimport Section from './components/Section';\nimport Feedback from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickActiveItem = item => {\n    this.setState(PrevState => ({\n      [item]: PrevState[item] + 1,\n    }));\n  };\n\n  getNameFeedback = name => {\n    return `${name.slice(0, 1).toUpperCase()}${name.slice(1).toLowerCase()}`;\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <Feedback\n            options={this.state}\n            onLeaveFeedback={this.clickActiveItem}\n            getNameFeedback={this.getNameFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__3lbkN\",\"button\":\"Feedback_button__2DSXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__3gC9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__28Oqn\"};"],"sourceRoot":""}